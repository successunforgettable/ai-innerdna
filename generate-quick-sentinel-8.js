import OpenAI from 'openai';
import fs from 'fs';

const openai = new OpenAI({ 
  apiKey: process.env.OPENAI_API_KEY,
  timeout: 60000,
  maxRetries: 2
});

async function generateSentinel8Quick() {
  console.log('ðŸš€ Quick Sentinel 8 generation starting...');
  
  try {
    // Single comprehensive call with reduced content
    const response = await openai.chat.completions.create({
      model: 'gpt-4o',
      messages: [
        {
          role: 'system',
          content: 'Generate Sentinel 8 transformation report content. Be concise but powerful.'
        },
        {
          role: 'user',
          content: `Generate essential Sentinel 8 content (60% destructive/40% good, self-preservation dominant, sexual blind):

1. heroTitle: Transformation title
2. brainHeartDisconnect: Warning like "PROTECTIVE CONTROL DETECTED"
3. stage1Description: 50 words about ordinary world
4. challengeCards: 3 cards with title, description, icon
5. wheelOfLife: 6 areas with area, percentage, description
6. testimonials: 3 testimonials with quote, name, title
7. heroJourneyStages: stages 2-4 only (40 words each)
8. callToAction: Final message (40 words)

Return complete JSON.`
        }
      ],
      response_format: { type: 'json_object' },
      temperature: 0.7,
      max_tokens: 2500
    });

    const content = JSON.parse(response.choices[0].message.content);
    
    // Save and display results
    fs.writeFileSync('sentinel-8-quick.json', JSON.stringify(content, null, 2));
    
    console.log('âœ… Sentinel 8 content generated by ChatGPT!');
    console.log('Hero Title:', content.heroTitle);
    console.log('Disconnect:', content.brainHeartDisconnect);
    console.log('Saved to: sentinel-8-quick.json');
    console.log('Characters:', JSON.stringify(content).length);
    
  } catch (error) {
    console.error('Error:', error.message);
  }
}

generateSentinel8Quick();