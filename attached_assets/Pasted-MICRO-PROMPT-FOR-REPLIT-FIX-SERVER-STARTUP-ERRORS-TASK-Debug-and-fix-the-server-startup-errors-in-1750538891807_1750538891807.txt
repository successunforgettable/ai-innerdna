MICRO-PROMPT FOR REPLIT - FIX SERVER STARTUP ERRORS
TASK: Debug and fix the server startup errors in workingReportGenerator.ts
RULE: Report exact error messages and fix function reference issues
CONSTRAINT: Use only the working code from working-solution.js that we know functions
First, check the exact server startup error:
bash# Start server and capture exact error message
npm run dev 2>&1 | head -20
Then fix the workingReportGenerator.ts by copying the exact working functions from working-solution.js:
typescript// Replace content in server/workingReportGenerator.ts with this exact code:
import fs from 'fs';
import path from 'path';

interface AssessmentData {
  personalityType: number;
  personalityName: string;
  colorStates: Array<{name: string; percentage: number}>;
  detailTokens: {selfPreservation: number; sexual: number; social: number};
  dominantState: {name: string; percentage: number};
  secondaryState: {name: string; percentage: number};
  dominantSubtype: string;
}

export async function generateWorkingReport(assessmentData?: Partial<AssessmentData>): Promise<string> {
  // Use default Sentinel 6 data if none provided
  const testData: AssessmentData = {
    personalityType: 6,
    personalityName: "Sentinel 6",
    colorStates: [{name: "Anxious", percentage: 60}, {name: "Secure", percentage: 40}],
    detailTokens: {selfPreservation: 3, sexual: 2, social: 5},
    dominantState: {name: "Anxious", percentage: 60},
    secondaryState: {name: "Secure", percentage: 40},
    dominantSubtype: "Social",
    ...assessmentData
  };

  // Copy exact content generation from working-solution.js
  const contentData = {
    PERSONALITY_TYPE: testData.personalityName,
    HERO_SUBTITLE: "Your Path from Anxious to Security",
    STAGE1_OPENING: "You are a Sentinel 6 - naturally alert to danger and focused on security.",
    // ... add all the content from working-solution.js
  };

  // Use the exact template injection that works
  const template = fs.readFileSync('./challenger_template.html', 'utf8');
  let html = template;
  
  Object.keys(contentData).forEach(key => {
    html = html.replaceAll(`{{${key}}}`, contentData[key]);
  });

  const filename = 'sentinel-6-working.html';
  fs.writeFileSync(filename, html);
  
  return path.resolve(filename);
}
Run the server startup error check first and report the exact error messages.