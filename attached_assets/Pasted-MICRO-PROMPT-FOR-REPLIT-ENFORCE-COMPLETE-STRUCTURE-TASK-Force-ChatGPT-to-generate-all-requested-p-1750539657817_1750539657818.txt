MICRO-PROMPT FOR REPLIT - ENFORCE COMPLETE STRUCTURE
TASK: Force ChatGPT to generate all requested placeholders with explicit structure
RULE: Use stricter prompt formatting to ensure complete JSON structure
CONSTRAINT: Maintain proven API approach while enforcing comprehensive output
Replace the prompt with this more explicit structure:
typescriptasync function generateContentViaAPI(data: AssessmentData): Promise<Record<string, string>> {
  const prompt = `You are generating content for a ${data.personalityName} transformation report. You MUST generate ALL of these exact fields:

REQUIRED JSON STRUCTURE (generate ALL fields):
{
  "PERSONALITY_TYPE": "${data.personalityName}",
  "HERO_SUBTITLE": "transformation tagline here",
  "STAGE1_OPENING": "current reality description here",
  "STAGE1_DESCRIPTION": "detailed analysis here", 
  "STAGE2_OPENING": "call to adventure here",
  "STAGE3_OPENING": "refusal description here",
  "STAGE4_OPENING": "mentor meeting here",
  "CARD1_TITLE": "primary challenge title",
  "CARD1_DESCRIPTION": "15-30 word description",
  "CARD2_TITLE": "core pattern title",
  "CARD2_DESCRIPTION": "15-30 word description", 
  "CARD3_TITLE": "emotional state title",
  "CARD3_DESCRIPTION": "15-30 word description",
  "CARD4_TITLE": "behavioral pattern title", 
  "CARD4_DESCRIPTION": "15-30 word description",
  "TESTIMONIAL1_QUOTE": "20-40 word testimonial quote",
  "TESTIMONIAL1_AUTHOR": "Name, Professional Title",
  "TESTIMONIAL2_QUOTE": "20-40 word testimonial quote", 
  "TESTIMONIAL2_AUTHOR": "Name, Professional Title",
  "TESTIMONIAL3_QUOTE": "20-40 word testimonial quote",
  "TESTIMONIAL3_AUTHOR": "Name, Professional Title",
  "WHEEL_CAREER_BEFORE": "current career state",
  "WHEEL_CAREER_AFTER": "transformed career state",
  "WHEEL_RELATIONSHIPS_BEFORE": "current relationship patterns",
  "WHEEL_RELATIONSHIPS_AFTER": "transformed relationships",
  "WHEEL_MENTAL_BEFORE": "current mental state with ${data.dominantState.name}",
  "WHEEL_MENTAL_AFTER": "transformed mental clarity",
  "WARNING_TEXT": "warning about staying stuck",
  "INSIGHT_TEXT": "key transformation insight", 
  "INVITATION_TEXT": "invitation to transform"
}

Generate exactly this structure with appropriate ${data.personalityName} content. Return ONLY the complete JSON object.`;

  // Increase token limit further and add response validation
  const completion = await openai.chat.completions.create({
    model: "gpt-4o",
    messages: [{ role: "user", content: prompt }],
    max_tokens: 4000, // Increased token limit
    temperature: 0.5  // Lower temperature for more consistent structure
  });

  // Add validation to ensure all expected keys are present
  const parsedContent = JSON.parse(responseText);
  const expectedKeys = 27; // Total expected keys
  const actualKeys = Object.keys(parsedContent).length;
  
  console.log(`📊 Content coverage: ${actualKeys}/${expectedKeys} placeholders generated`);
  
  if (actualKeys < expectedKeys) {
    console.log('⚠️ Incomplete response, missing keys:', 
      ['STAGE2_OPENING', 'STAGE3_OPENING', 'STAGE4_OPENING'].filter(key => !parsedContent[key]));
  }
  
  return parsedContent;
}
Update with this more explicit structure enforcement and validation.